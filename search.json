[
  {
    "objectID": "notebooks/2023/mode/transit_mode.html",
    "href": "notebooks/2023/mode/transit_mode.html",
    "title": "Transit Mode",
    "section": "",
    "text": "Data\n# Categorize based on HHTS categories\n\ntransit_mode = pd.concat(\n    [\n        pd.read_parquet(SAVE_DIR / \"transit_mode.parquet\"),\n        pd.read_parquet(SAVE_DIR / \"weights.parquet\"),\n    ],\n    axis=1,\n)",
    "crumbs": [
      "2023 Onboard Survey",
      "Mode",
      "Transit Mode"
    ]
  },
  {
    "objectID": "notebooks/2023/mode/transit_mode.html#table",
    "href": "notebooks/2023/mode/transit_mode.html#table",
    "title": "Transit Mode",
    "section": "Table",
    "text": "Table\n\n\nTable\nunweighted = transit_mode.groupby(\"transit_mode\", observed=True).size()\nunlinked = transit_mode.groupby(\"transit_mode\", observed=True).unlinked_weight.sum()\nlinked = transit_mode.groupby(\"transit_mode\", observed=True).linked_weight.sum()\ntotal_valid = len(transit_mode.dropna())\ntotal = len(transit_mode)\n\nunlinked_total = transit_mode.unlinked_weight.sum()\nlinked_total = transit_mode.linked_weight.sum()\n\nsummary = pd.DataFrame(\n    {\n        (\"unweighted\", \"count\"): unweighted,\n        (\"unweighted\", \"percent\"): unweighted / unweighted.sum(),\n        (\"unlinked_weight\", \"count\"): unlinked,\n        (\"unlinked_weight\", \"percent\"): unlinked / unlinked.sum(),\n        (\"linked_weight\", \"count\"): linked,\n        (\"linked_weight\", \"percent\"): linked / linked.sum(),\n    }\n)\n\ntable = pd.concat(\n    [\n        summary,\n        pd.DataFrame(\n            [\n                {\n                    \"age_category\": \"Total valid\",\n                    (\"unweighted\", \"count\"): total_valid,\n                    (\"unweighted\", \"percent\"): total_valid / total,\n                    (\"unlinked_weight\", \"count\"): unlinked.sum(),\n                    (\"unlinked_weight\", \"percent\"): unlinked.sum() / unlinked_total,\n                    (\"linked_weight\", \"count\"): linked.sum(),\n                    (\"linked_weight\", \"percent\"): linked.sum() / linked_total,\n                },\n                {\n                    \"age_category\": \"Total\",\n                    (\"unweighted\", \"count\"): total,\n                    (\"unlinked_weight\", \"count\"): unlinked_total,\n                    (\"linked_weight\", \"count\"): linked_total,\n                },\n            ],\n            index=[\"Total valid\", \"Total\"],\n        ).set_index(\"age_category\"),\n    ]\n).to_html(\n    formatters={\n        (\"unweighted\", \"count\"): \"{:,.0f}\".format,\n        (\"unweighted\", \"percent\"): \"{:,.2%}\".format,\n        (\"unlinked_weight\", \"count\"): \"{:,.0f}\".format,\n        (\"unlinked_weight\", \"percent\"): \"{:,.2%}\".format,\n        (\"linked_weight\", \"count\"): \"{:,.0f}\".format,\n        (\"linked_weight\", \"percent\"): \"{:,.2%}\".format,\n    }\n)\n\nHTML(table)\n\n\n\n\n\n\nunweighted\nunlinked_weight\nlinked_weight\n\n\n\ncount\npercent\ncount\npercent\ncount\npercent\n\n\n\n\nLocal\n17,120\n48.55%\n110,754\n39.41%\n84,973\n37.70%\n\n\nRapid\n2,376\n6.74%\n23,342\n8.31%\n20,449\n9.07%\n\n\nExpress\n1,039\n2.95%\n7,013\n2.50%\n5,367\n2.38%\n\n\nLRT\n14,333\n40.65%\n137,641\n48.98%\n112,734\n50.01%\n\n\nCommuter Rail\n392\n1.11%\n2,268\n0.81%\n1,889\n0.84%\n\n\nTotal valid\n35,260\n100.00%\n281,018\n100.00%\n225,412\n100.00%\n\n\nTotal\n35,260\nNaN\n281,018\nNaN\n225,412\nNaN",
    "crumbs": [
      "2023 Onboard Survey",
      "Mode",
      "Transit Mode"
    ]
  },
  {
    "objectID": "notebooks/2023/mode/transit_mode.html#charts",
    "href": "notebooks/2023/mode/transit_mode.html#charts",
    "title": "Transit Mode",
    "section": "Charts",
    "text": "Charts\n\n\nChart\nfigure = go.Figure()\nfigure.add_trace(\n    go.Bar(\n        x=summary.index,\n        y=summary[(\"unweighted\", \"percent\")],\n        name=\"Unweighted\",\n    )\n)\nfigure.add_trace(\n    go.Bar(\n        x=summary.index,\n        y=summary[(\"unlinked_weight\", \"percent\")],\n        name=\"Weighted (Unlinked)\",\n    )\n)\nfigure.add_trace(\n    go.Bar(\n        x=summary.index,\n        y=summary[(\"linked_weight\", \"percent\")],\n        name=\"Weighted (Linked)\",\n    )\n)\nfigure.update_layout(\n    title_text=\"Unweighted and Weighted Responses by Transit Mode\",\n    yaxis_range=[0, 1],\n    yaxis_tickformat=\",.0%\",\n    xaxis_title=\"Age\",\n    yaxis_title=\"Percent\",\n)\n\nfigure",
    "crumbs": [
      "2023 Onboard Survey",
      "Mode",
      "Transit Mode"
    ]
  },
  {
    "objectID": "notebooks/2023/mode/access_egress_mode.html",
    "href": "notebooks/2023/mode/access_egress_mode.html",
    "title": "Access/Egress Mode",
    "section": "",
    "text": "Data\naccess_egress_mode = pd.concat(\n    [\n        pd.read_parquet(SAVE_DIR / \"access_egress_mode.parquet\"),\n        pd.read_parquet(SAVE_DIR / \"weights.parquet\"),\n    ],\n    axis=1,\n)",
    "crumbs": [
      "2023 Onboard Survey",
      "Mode",
      "Access/Egress Mode"
    ]
  },
  {
    "objectID": "notebooks/2023/mode/access_egress_mode.html#access-mode",
    "href": "notebooks/2023/mode/access_egress_mode.html#access-mode",
    "title": "Access/Egress Mode",
    "section": "Access Mode",
    "text": "Access Mode\n\n\nTable\nunweighted = access_egress_mode.groupby(\"access_mode\", observed=True).size()\nunlinked = access_egress_mode.groupby(\n    \"access_mode\", observed=True\n).unlinked_weight.sum()\nlinked = access_egress_mode.groupby(\"access_mode\", observed=True).linked_weight.sum()\ntotal_valid = len(access_egress_mode.dropna())\ntotal = len(access_egress_mode)\n\nunlinked_total = access_egress_mode.unlinked_weight.sum()\nlinked_total = access_egress_mode.linked_weight.sum()\n\nsummary = pd.DataFrame(\n    {\n        (\"unweighted\", \"count\"): unweighted,\n        (\"unweighted\", \"percent\"): unweighted / unweighted.sum(),\n        (\"unlinked_weight\", \"count\"): unlinked,\n        (\"unlinked_weight\", \"percent\"): unlinked / unlinked.sum(),\n        (\"linked_weight\", \"count\"): linked,\n        (\"linked_weight\", \"percent\"): linked / linked.sum(),\n    }\n)\n\ntable = pd.concat(\n    [\n        summary,\n        pd.DataFrame(\n            [\n                {\n                    \"age_category\": \"Total valid\",\n                    (\"unweighted\", \"count\"): total_valid,\n                    (\"unweighted\", \"percent\"): total_valid / total,\n                    (\"unlinked_weight\", \"count\"): unlinked.sum(),\n                    (\"unlinked_weight\", \"percent\"): unlinked.sum() / unlinked_total,\n                    (\"linked_weight\", \"count\"): linked.sum(),\n                    (\"linked_weight\", \"percent\"): linked.sum() / linked_total,\n                },\n                {\n                    \"age_category\": \"Total\",\n                    (\"unweighted\", \"count\"): total,\n                    (\"unlinked_weight\", \"count\"): unlinked_total,\n                    (\"linked_weight\", \"count\"): linked_total,\n                },\n            ],\n            index=[\"Total valid\", \"Total\"],\n        ).set_index(\"age_category\"),\n    ]\n).to_html(\n    formatters={\n        (\"unweighted\", \"count\"): \"{:,.0f}\".format,\n        (\"unweighted\", \"percent\"): \"{:,.2%}\".format,\n        (\"unlinked_weight\", \"count\"): \"{:,.0f}\".format,\n        (\"unlinked_weight\", \"percent\"): \"{:,.2%}\".format,\n        (\"linked_weight\", \"count\"): \"{:,.0f}\".format,\n        (\"linked_weight\", \"percent\"): \"{:,.2%}\".format,\n    }\n)\n\nHTML(table)\n\n\n\n\n\n\nunweighted\nunlinked_weight\nlinked_weight\n\n\n\ncount\npercent\ncount\npercent\ncount\npercent\n\n\n\n\nWalk\n30,556\n86.66%\n241,964\n86.10%\n190,690\n84.60%\n\n\nWheelchair\n222\n0.63%\n1,515\n0.54%\n1,207\n0.54%\n\n\nBike (personal)\n659\n1.87%\n5,325\n1.89%\n5,079\n2.25%\n\n\nE-Bike (personal)\n118\n0.33%\n876\n0.31%\n865\n0.38%\n\n\nE-Bike (shared)\n5\n0.01%\n38\n0.01%\n35\n0.02%\n\n\nSkateboard\n406\n1.15%\n3,370\n1.20%\n2,789\n1.24%\n\n\nE-scooter (personal)\n233\n0.66%\n1,909\n0.68%\n1,829\n0.81%\n\n\nE-scooter (shared)\n10\n0.03%\n101\n0.04%\n91\n0.04%\n\n\nUber, Lyft, etc. (private)\n77\n0.22%\n564\n0.20%\n485\n0.22%\n\n\nUber, Lyft, etc. (pool or shared)\n238\n0.67%\n2,124\n0.76%\n1,845\n0.82%\n\n\nTaxi\n205\n0.58%\n1,756\n0.62%\n1,360\n0.60%\n\n\nWas dropped off by someone\n1,591\n4.51%\n12,761\n4.54%\n11,158\n4.95%\n\n\nDrove alone and parked\n614\n1.74%\n5,870\n2.09%\n5,492\n2.44%\n\n\nDrove or rode with others and parked\n172\n0.49%\n1,259\n0.45%\n1,177\n0.52%\n\n\nElectric vehicle shuttle\n13\n0.04%\n102\n0.04%\n97\n0.04%\n\n\nOther shuttle\n140\n0.40%\n1,478\n0.53%\n1,204\n0.53%\n\n\nOther\n1\n0.00%\n8\n0.00%\n8\n0.00%\n\n\nTotal valid\n34,875\n98.91%\n281,018\n100.00%\n225,412\n100.00%\n\n\nTotal\n35,260\nNaN\n281,018\nNaN\n225,412\nNaN\n\n\n\n\n\n\n\nChart\nfigure = go.Figure()\nfigure.add_trace(\n    go.Bar(\n        x=summary.index,\n        y=summary[(\"unweighted\", \"percent\")],\n        name=\"Unweighted\",\n    )\n)\nfigure.add_trace(\n    go.Bar(\n        x=summary.index,\n        y=summary[(\"unlinked_weight\", \"percent\")],\n        name=\"Weighted (Unlinked)\",\n    )\n)\nfigure.add_trace(\n    go.Bar(\n        x=summary.index,\n        y=summary[(\"linked_weight\", \"percent\")],\n        name=\"Weighted (Linked)\",\n    )\n)\nfigure.update_layout(\n    title_text=\"Unweighted and Weighted Responses by Access Mode\",\n    yaxis_range=[0, 1],\n    yaxis_tickformat=\",.0%\",\n    xaxis_title=\"Age\",\n    yaxis_title=\"Percent\",\n)\n\nfigure",
    "crumbs": [
      "2023 Onboard Survey",
      "Mode",
      "Access/Egress Mode"
    ]
  },
  {
    "objectID": "notebooks/2023/mode/access_egress_mode.html#access-mode-abm-categories",
    "href": "notebooks/2023/mode/access_egress_mode.html#access-mode-abm-categories",
    "title": "Access/Egress Mode",
    "section": "Access Mode (ABM Categories)",
    "text": "Access Mode (ABM Categories)\n\n\nTable\nunweighted = access_egress_mode.groupby(\"access_mode_abm\", observed=True).size()\nunlinked = access_egress_mode.groupby(\n    \"access_mode_abm\", observed=True\n).unlinked_weight.sum()\nlinked = access_egress_mode.groupby(\n    \"access_mode_abm\", observed=True\n).linked_weight.sum()\ntotal_valid = len(access_egress_mode.dropna())\ntotal = len(access_egress_mode)\n\nunlinked_total = access_egress_mode.unlinked_weight.sum()\nlinked_total = access_egress_mode.linked_weight.sum()\n\nsummary = pd.DataFrame(\n    {\n        (\"unweighted\", \"count\"): unweighted,\n        (\"unweighted\", \"percent\"): unweighted / unweighted.sum(),\n        (\"unlinked_weight\", \"count\"): unlinked,\n        (\"unlinked_weight\", \"percent\"): unlinked / unlinked.sum(),\n        (\"linked_weight\", \"count\"): linked,\n        (\"linked_weight\", \"percent\"): linked / linked.sum(),\n    }\n)\n\ntable = pd.concat(\n    [\n        summary,\n        pd.DataFrame(\n            [\n                {\n                    \"age_category\": \"Total valid\",\n                    (\"unweighted\", \"count\"): total_valid,\n                    (\"unweighted\", \"percent\"): total_valid / total,\n                    (\"unlinked_weight\", \"count\"): unlinked.sum(),\n                    (\"unlinked_weight\", \"percent\"): unlinked.sum() / unlinked_total,\n                    (\"linked_weight\", \"count\"): linked.sum(),\n                    (\"linked_weight\", \"percent\"): linked.sum() / linked_total,\n                },\n                {\n                    \"age_category\": \"Total\",\n                    (\"unweighted\", \"count\"): total,\n                    (\"unlinked_weight\", \"count\"): unlinked_total,\n                    (\"linked_weight\", \"count\"): linked_total,\n                },\n            ],\n            index=[\"Total valid\", \"Total\"],\n        ).set_index(\"age_category\"),\n    ]\n).to_html(\n    formatters={\n        (\"unweighted\", \"count\"): \"{:,.0f}\".format,\n        (\"unweighted\", \"percent\"): \"{:,.2%}\".format,\n        (\"unlinked_weight\", \"count\"): \"{:,.0f}\".format,\n        (\"unlinked_weight\", \"percent\"): \"{:,.2%}\".format,\n        (\"linked_weight\", \"count\"): \"{:,.0f}\".format,\n        (\"linked_weight\", \"percent\"): \"{:,.2%}\".format,\n    }\n)\n\nHTML(table)\n\n\n\n\n\n\nunweighted\nunlinked_weight\nlinked_weight\n\n\n\ncount\npercent\ncount\npercent\ncount\npercent\n\n\n\n\nWalk to transit\n31,184\n88.44%\n246,848\n87.84%\n194,686\n86.37%\n\n\nBike to transit\n659\n1.87%\n5,325\n1.89%\n5,079\n2.25%\n\n\nMicromobility to transit\n366\n1.04%\n2,925\n1.04%\n2,820\n1.25%\n\n\nPNR to transit\n786\n2.23%\n7,129\n2.54%\n6,670\n2.96%\n\n\nKNR to transit\n1,591\n4.51%\n12,761\n4.54%\n11,158\n4.95%\n\n\nTNC to transit\n673\n1.91%\n6,024\n2.14%\n4,991\n2.21%\n\n\nTotal valid\n34,875\n98.91%\n281,011\n100.00%\n225,404\n100.00%\n\n\nTotal\n35,260\nNaN\n281,018\nNaN\n225,412\nNaN\n\n\n\n\n\n\n\nChart\nfigure = go.Figure()\nfigure.add_trace(\n    go.Bar(\n        x=summary.index,\n        y=summary[(\"unweighted\", \"percent\")],\n        name=\"Unweighted\",\n    )\n)\nfigure.add_trace(\n    go.Bar(\n        x=summary.index,\n        y=summary[(\"unlinked_weight\", \"percent\")],\n        name=\"Weighted (Unlinked)\",\n    )\n)\nfigure.add_trace(\n    go.Bar(\n        x=summary.index,\n        y=summary[(\"linked_weight\", \"percent\")],\n        name=\"Weighted (Linked)\",\n    )\n)\nfigure.update_layout(\n    title_text=\"Unweighted and Weighted Responses by Access Mode (ABM Categories)\",\n    yaxis_range=[0, 1],\n    yaxis_tickformat=\",.0%\",\n    xaxis_title=\"Age\",\n    yaxis_title=\"Percent\",\n)\n\nfigure",
    "crumbs": [
      "2023 Onboard Survey",
      "Mode",
      "Access/Egress Mode"
    ]
  },
  {
    "objectID": "notebooks/2023/demographics/age.html",
    "href": "notebooks/2023/demographics/age.html",
    "title": "Age",
    "section": "",
    "text": "Data\n# Categorize based on HHTS categories\n\nage = pd.concat(\n    [\n        pd.read_parquet(SAVE_DIR / \"age.parquet\"),\n        pd.read_parquet(SAVE_DIR / \"weights.parquet\"),\n    ],\n    axis=1,\n)",
    "crumbs": [
      "2023 Onboard Survey",
      "Demographics",
      "Age"
    ]
  },
  {
    "objectID": "notebooks/2023/demographics/age.html#table",
    "href": "notebooks/2023/demographics/age.html#table",
    "title": "Age",
    "section": "Table",
    "text": "Table\n\n\nTable\nunweighted = age.groupby(\"age_category\", observed=True).size()\nunlinked = age.groupby(\"age_category\", observed=True).unlinked_weight.sum()\nlinked = age.groupby(\"age_category\", observed=True).linked_weight.sum()\ntotal_valid = len(age.dropna())\ntotal = len(age)\n\nunlinked_total = age.unlinked_weight.sum()\nlinked_total = age.linked_weight.sum()\n\nsummary = pd.DataFrame(\n    {\n        (\"unweighted\", \"count\"): unweighted,\n        (\"unweighted\", \"percent\"): unweighted / unweighted.sum(),\n        (\"unlinked_weight\", \"count\"): unlinked,\n        (\"unlinked_weight\", \"percent\"): unlinked / unlinked.sum(),\n        (\"linked_weight\", \"count\"): linked,\n        (\"linked_weight\", \"percent\"): linked / linked.sum(),\n    }\n)\n\ntable = pd.concat(\n    [\n        summary,\n        pd.DataFrame(\n            [\n                {\n                    \"age_category\": \"Total valid\",\n                    (\"unweighted\", \"count\"): total_valid,\n                    (\"unweighted\", \"percent\"): total_valid / total,\n                    (\"unlinked_weight\", \"count\"): unlinked.sum(),\n                    (\"unlinked_weight\", \"percent\"): unlinked.sum() / unlinked_total,\n                    (\"linked_weight\", \"count\"): linked.sum(),\n                    (\"linked_weight\", \"percent\"): linked.sum() / linked_total,\n                },\n                {\n                    \"age_category\": \"Total\",\n                    (\"unweighted\", \"count\"): total,\n                    (\"unlinked_weight\", \"count\"): unlinked_total,\n                    (\"linked_weight\", \"count\"): linked_total,\n                },\n            ],\n            index=[\"Total valid\", \"Total\"],\n        ).set_index(\"age_category\"),\n    ]\n).to_html(\n    formatters={\n        (\"unweighted\", \"count\"): \"{:,.0f}\".format,\n        (\"unweighted\", \"percent\"): \"{:,.2%}\".format,\n        (\"unlinked_weight\", \"count\"): \"{:,.0f}\".format,\n        (\"unlinked_weight\", \"percent\"): \"{:,.2%}\".format,\n        (\"linked_weight\", \"count\"): \"{:,.0f}\".format,\n        (\"linked_weight\", \"percent\"): \"{:,.2%}\".format,\n    }\n)\n\nHTML(table)\n\n\n\n\n\n\nunweighted\nunlinked_weight\nlinked_weight\n\n\n\ncount\npercent\ncount\npercent\ncount\npercent\n\n\nage_category\n\n\n\n\n\n\n\n\n\n\nUnder 5\n160\n0.47%\n1,142\n0.42%\n873\n0.40%\n\n\n5-15\n556\n1.62%\n4,526\n1.65%\n3,544\n1.61%\n\n\n16-17\n988\n2.87%\n7,973\n2.91%\n6,254\n2.85%\n\n\n18-24\n8,310\n24.18%\n71,323\n26.05%\n58,966\n26.84%\n\n\n25-34\n8,049\n23.42%\n63,665\n23.25%\n51,159\n23.29%\n\n\n35-44\n5,861\n17.05%\n44,947\n16.42%\n35,908\n16.35%\n\n\n45-54\n4,073\n11.85%\n31,758\n11.60%\n25,169\n11.46%\n\n\n55-64\n3,441\n10.01%\n26,552\n9.70%\n20,681\n9.41%\n\n\n65-74\n2,338\n6.80%\n17,561\n6.41%\n13,699\n6.24%\n\n\n75-84\n536\n1.56%\n3,892\n1.42%\n3,010\n1.37%\n\n\n85 or Older\n57\n0.17%\n457\n0.17%\n401\n0.18%\n\n\nTotal valid\n34,369\n97.47%\n273,795\n97.43%\n219,663\n97.45%\n\n\nTotal\n35,260\nNaN\n281,018\nNaN\n225,412\nNaN",
    "crumbs": [
      "2023 Onboard Survey",
      "Demographics",
      "Age"
    ]
  },
  {
    "objectID": "notebooks/2023/demographics/age.html#charts",
    "href": "notebooks/2023/demographics/age.html#charts",
    "title": "Age",
    "section": "Charts",
    "text": "Charts\n\n\nChart\nfigure = go.Figure()\nfigure.add_trace(\n    go.Bar(\n        x=summary.index,\n        y=summary[(\"unweighted\", \"percent\")],\n        name=\"Unweighted\",\n    )\n)\nfigure.add_trace(\n    go.Bar(\n        x=summary.index,\n        y=summary[(\"unlinked_weight\", \"percent\")],\n        name=\"Weighted (Unlinked)\",\n    )\n)\nfigure.add_trace(\n    go.Bar(\n        x=summary.index,\n        y=summary[(\"linked_weight\", \"percent\")],\n        name=\"Weighted (Linked)\",\n    )\n)\nfigure.update_layout(\n    title_text=\"Unweighted and Weighted Responses by Age\",\n    yaxis_range=[0, 1],\n    yaxis_tickformat=\",.0%\",\n    xaxis_title=\"Age\",\n    yaxis_title=\"Percent\",\n)\n\nfigure",
    "crumbs": [
      "2023 Onboard Survey",
      "Demographics",
      "Age"
    ]
  },
  {
    "objectID": "notebooks/2015/demographics/age.html",
    "href": "notebooks/2015/demographics/age.html",
    "title": "Age",
    "section": "",
    "text": "Data\n# Categorize based on HHTS categories\n\nage = pd.concat(\n    [\n        pd.read_parquet(SAVE_DIR / \"age.parquet\"),\n        pd.read_parquet(SAVE_DIR / \"weights.parquet\"),\n    ],\n    axis=1,\n)",
    "crumbs": [
      "2015 Onboard Survey",
      "Demographics",
      "Age"
    ]
  },
  {
    "objectID": "notebooks/2015/demographics/age.html#table",
    "href": "notebooks/2015/demographics/age.html#table",
    "title": "Age",
    "section": "Table",
    "text": "Table\n\n\nTable\nunweighted = age.groupby(\"age_category\", observed=True).size()\nunlinked = age.groupby(\"age_category\", observed=True).unlinked_weight.sum()\nlinked = age.groupby(\"age_category\", observed=True).linked_weight.sum()\ntotal_valid = len(age.dropna())\ntotal = len(age)\n\nunlinked_total = age.unlinked_weight.sum()\nlinked_total = age.linked_weight.sum()\n\nsummary = pd.DataFrame(\n    {\n        (\"unweighted\", \"count\"): unweighted,\n        (\"unweighted\", \"percent\"): unweighted / unweighted.sum(),\n        (\"unlinked_weight\", \"count\"): unlinked,\n        (\"unlinked_weight\", \"percent\"): unlinked / unlinked.sum(),\n        (\"linked_weight\", \"count\"): linked,\n        (\"linked_weight\", \"percent\"): linked / linked.sum(),\n    }\n)\n\ntable = pd.concat(\n    [\n        summary,\n        pd.DataFrame(\n            [\n                {\n                    \"age_category\": \"Total valid\",\n                    (\"unweighted\", \"count\"): total_valid,\n                    (\"unweighted\", \"percent\"): total_valid / total,\n                    (\"unlinked_weight\", \"count\"): unlinked.sum(),\n                    (\"unlinked_weight\", \"percent\"): unlinked.sum() / unlinked_total,\n                    (\"linked_weight\", \"count\"): linked.sum(),\n                    (\"linked_weight\", \"percent\"): linked.sum() / linked_total,\n                },\n                {\n                    \"age_category\": \"Total\",\n                    (\"unweighted\", \"count\"): total,\n                    (\"unlinked_weight\", \"count\"): unlinked_total,\n                    (\"linked_weight\", \"count\"): linked_total,\n                },\n            ],\n            index=[\"Total valid\", \"Total\"],\n        ).set_index(\"age_category\"),\n    ]\n).to_html(\n    formatters={\n        (\"unweighted\", \"count\"): \"{:,.0f}\".format,\n        (\"unweighted\", \"percent\"): \"{:,.2%}\".format,\n        (\"unlinked_weight\", \"count\"): \"{:,.0f}\".format,\n        (\"unlinked_weight\", \"percent\"): \"{:,.2%}\".format,\n        (\"linked_weight\", \"count\"): \"{:,.0f}\".format,\n        (\"linked_weight\", \"percent\"): \"{:,.2%}\".format,\n    }\n)\n\nHTML(table)\n\n\n\n\n\n\nunweighted\nunlinked_weight\nlinked_weight\n\n\n\ncount\npercent\ncount\npercent\ncount\npercent\n\n\nage_category\n\n\n\n\n\n\n\n\n\n\nUnder 5\n162\n0.49%\n1,574\n0.48%\n1,121\n0.49%\n\n\n5-15\n565\n1.71%\n6,001\n1.81%\n4,487\n1.95%\n\n\n16-17\n1,255\n3.81%\n14,039\n4.24%\n9,930\n4.32%\n\n\n18-24\n10,489\n31.81%\n103,775\n31.34%\n71,913\n31.26%\n\n\n25-34\n8,160\n24.75%\n82,079\n24.79%\n57,897\n25.17%\n\n\n35-44\n4,555\n13.82%\n46,751\n14.12%\n32,727\n14.23%\n\n\n45-54\n3,560\n10.80%\n35,817\n10.82%\n23,816\n10.35%\n\n\n55-64\n2,732\n8.29%\n26,270\n7.93%\n17,561\n7.63%\n\n\n65-74\n1,224\n3.71%\n12,005\n3.63%\n8,611\n3.74%\n\n\n75-84\n230\n0.70%\n2,374\n0.72%\n1,691\n0.73%\n\n\n85 or Older\n39\n0.12%\n412\n0.12%\n295\n0.13%\n\n\nTotal valid\n32,971\n90.80%\n331,099\n89.54%\n230,049\n86.37%\n\n\nTotal\n36,310\nNaN\n369,768\nNaN\n266,337\nNaN",
    "crumbs": [
      "2015 Onboard Survey",
      "Demographics",
      "Age"
    ]
  },
  {
    "objectID": "notebooks/2015/demographics/age.html#charts",
    "href": "notebooks/2015/demographics/age.html#charts",
    "title": "Age",
    "section": "Charts",
    "text": "Charts\n\n\nChart\nfigure = go.Figure()\nfigure.add_trace(\n    go.Bar(\n        x=summary.index,\n        y=summary[(\"unweighted\", \"percent\")],\n        name=\"Unweighted\",\n    )\n)\nfigure.add_trace(\n    go.Bar(\n        x=summary.index,\n        y=summary[(\"unlinked_weight\", \"percent\")],\n        name=\"Weighted (Unlinked)\",\n    )\n)\nfigure.add_trace(\n    go.Bar(\n        x=summary.index,\n        y=summary[(\"linked_weight\", \"percent\")],\n        name=\"Weighted (Linked)\",\n    )\n)\nfigure.update_layout(\n    title_text=\"Unweighted and Weighted Responses by Age\",\n    yaxis_range=[0, 1],\n    yaxis_tickformat=\",.0%\",\n    xaxis_title=\"Age\",\n    yaxis_title=\"Percent\",\n)\n\nfigure",
    "crumbs": [
      "2015 Onboard Survey",
      "Demographics",
      "Age"
    ]
  },
  {
    "objectID": "notebooks/2015/mode/access_egress_mode.html",
    "href": "notebooks/2015/mode/access_egress_mode.html",
    "title": "Access/Egress Mode",
    "section": "",
    "text": "Data\naccess_egress_mode = pd.concat(\n    [\n        pd.read_parquet(SAVE_DIR / \"access_egress_mode.parquet\"),\n        pd.read_parquet(SAVE_DIR / \"weights.parquet\"),\n    ],\n    axis=1,\n)"
  },
  {
    "objectID": "notebooks/2015/mode/access_egress_mode.html#access-mode",
    "href": "notebooks/2015/mode/access_egress_mode.html#access-mode",
    "title": "Access/Egress Mode",
    "section": "Access mode",
    "text": "Access mode\n\n\nTable\nunweighted = access_egress_mode.groupby(\"access_mode\", observed=True).size()\nunlinked = access_egress_mode.groupby(\n    \"access_mode\", observed=True\n).unlinked_weight.sum()\nlinked = access_egress_mode.groupby(\"access_mode\", observed=True).linked_weight.sum()\ntotal_valid = len(access_egress_mode.dropna())\ntotal = len(access_egress_mode)\n\nunlinked_total = access_egress_mode.unlinked_weight.sum()\nlinked_total = access_egress_mode.linked_weight.sum()\n\nsummary = pd.DataFrame(\n    {\n        (\"unweighted\", \"count\"): unweighted,\n        (\"unweighted\", \"percent\"): unweighted / unweighted.sum(),\n        (\"unlinked_weight\", \"count\"): unlinked,\n        (\"unlinked_weight\", \"percent\"): unlinked / unlinked.sum(),\n        (\"linked_weight\", \"count\"): linked,\n        (\"linked_weight\", \"percent\"): linked / linked.sum(),\n    }\n)\n\ntable = pd.concat(\n    [\n        summary,\n        pd.DataFrame(\n            [\n                {\n                    \"age_category\": \"Total valid\",\n                    (\"unweighted\", \"count\"): total_valid,\n                    (\"unweighted\", \"percent\"): total_valid / total,\n                    (\"unlinked_weight\", \"count\"): unlinked.sum(),\n                    (\"unlinked_weight\", \"percent\"): unlinked.sum() / unlinked_total,\n                    (\"linked_weight\", \"count\"): linked.sum(),\n                    (\"linked_weight\", \"percent\"): linked.sum() / linked_total,\n                },\n                {\n                    \"age_category\": \"Total\",\n                    (\"unweighted\", \"count\"): total,\n                    (\"unlinked_weight\", \"count\"): unlinked_total,\n                    (\"linked_weight\", \"count\"): linked_total,\n                },\n            ],\n            index=[\"Total valid\", \"Total\"],\n        ).set_index(\"age_category\"),\n    ]\n).to_html(\n    formatters={\n        (\"unweighted\", \"count\"): \"{:,.0f}\".format,\n        (\"unweighted\", \"percent\"): \"{:,.2%}\".format,\n        (\"unlinked_weight\", \"count\"): \"{:,.0f}\".format,\n        (\"unlinked_weight\", \"percent\"): \"{:,.2%}\".format,\n        (\"linked_weight\", \"count\"): \"{:,.0f}\".format,\n        (\"linked_weight\", \"percent\"): \"{:,.2%}\".format,\n    }\n)\n\nHTML(table)\n\n\n\n\n\n\nunweighted\nunlinked_weight\nlinked_weight\n\n\n\ncount\npercent\ncount\npercent\ncount\npercent\n\n\n\n\nWalked\n29,681\n87.56%\n301,777\n88.73%\n207,707\n87.76%\n\n\nBike\n663\n1.96%\n5,410\n1.59%\n4,318\n1.82%\n\n\nWas dropped off by someone\n1,595\n4.71%\n15,831\n4.65%\n11,720\n4.95%\n\n\nDrove alone and parked\n792\n2.34%\n5,397\n1.59%\n4,452\n1.88%\n\n\nDrove or rode with others and parked\n228\n0.67%\n1,610\n0.47%\n1,253\n0.53%\n\n\nWheelchair\n92\n0.27%\n971\n0.29%\n684\n0.29%\n\n\nSkateboard\n413\n1.22%\n4,199\n1.23%\n3,115\n1.32%\n\n\nCarshare (i.e. car2go, Zipcar, etc.)\n5\n0.01%\n45\n0.01%\n21\n0.01%\n\n\nTaxi, Uber, Lyft, etc.\n286\n0.84%\n3,821\n1.12%\n2,576\n1.09%\n\n\nFree Shuttle\n137\n0.40%\n1,014\n0.30%\n798\n0.34%\n\n\nOther\n5\n0.01%\n44\n0.01%\n42\n0.02%\n\n\nTotal valid\n33,892\n93.34%\n340,119\n91.98%\n236,688\n88.87%\n\n\nTotal\n36,310\nNaN\n369,768\nNaN\n266,337\nNaN\n\n\n\n\n\n\n\nChart\nfigure = go.Figure()\nfigure.add_trace(\n    go.Bar(\n        x=summary.index,\n        y=summary[(\"unweighted\", \"percent\")],\n        name=\"Unweighted\",\n    )\n)\nfigure.add_trace(\n    go.Bar(\n        x=summary.index,\n        y=summary[(\"unlinked_weight\", \"percent\")],\n        name=\"Weighted (Unlinked)\",\n    )\n)\nfigure.add_trace(\n    go.Bar(\n        x=summary.index,\n        y=summary[(\"linked_weight\", \"percent\")],\n        name=\"Weighted (Linked)\",\n    )\n)\nfigure.update_layout(\n    title_text=\"Unweighted and Weighted Responses by Access Mode\",\n    yaxis_range=[0, 1],\n    yaxis_tickformat=\",.0%\",\n    xaxis_title=\"Age\",\n    yaxis_title=\"Percent\",\n)\n\nfigure"
  },
  {
    "objectID": "notebooks/2015/mode/access_egress_mode.html#access-mode-abm-categories",
    "href": "notebooks/2015/mode/access_egress_mode.html#access-mode-abm-categories",
    "title": "Access/Egress Mode",
    "section": "Access Mode (ABM Categories)",
    "text": "Access Mode (ABM Categories)\n\n\nTable\nunweighted = access_egress_mode.groupby(\"access_mode\", observed=True).size()\nunlinked = access_egress_mode.groupby(\n    \"access_mode\", observed=True\n).unlinked_weight.sum()\nlinked = access_egress_mode.groupby(\"access_mode\", observed=True).linked_weight.sum()\ntotal_valid = len(access_egress_mode.dropna())\ntotal = len(access_egress_mode)\n\nunlinked_total = access_egress_mode.unlinked_weight.sum()\nlinked_total = access_egress_mode.linked_weight.sum()\n\nsummary = pd.DataFrame(\n    {\n        (\"unweighted\", \"count\"): unweighted,\n        (\"unweighted\", \"percent\"): unweighted / unweighted.sum(),\n        (\"unlinked_weight\", \"count\"): unlinked,\n        (\"unlinked_weight\", \"percent\"): unlinked / unlinked.sum(),\n        (\"linked_weight\", \"count\"): linked,\n        (\"linked_weight\", \"percent\"): linked / linked.sum(),\n    }\n)\n\ntable = pd.concat(\n    [\n        summary,\n        pd.DataFrame(\n            [\n                {\n                    \"age_category\": \"Total valid\",\n                    (\"unweighted\", \"count\"): total_valid,\n                    (\"unweighted\", \"percent\"): total_valid / total,\n                    (\"unlinked_weight\", \"count\"): unlinked.sum(),\n                    (\"unlinked_weight\", \"percent\"): unlinked.sum() / unlinked_total,\n                    (\"linked_weight\", \"count\"): linked.sum(),\n                    (\"linked_weight\", \"percent\"): linked.sum() / linked_total,\n                },\n                {\n                    \"age_category\": \"Total\",\n                    (\"unweighted\", \"count\"): total,\n                    (\"unlinked_weight\", \"count\"): unlinked_total,\n                    (\"linked_weight\", \"count\"): linked_total,\n                },\n            ],\n            index=[\"Total valid\", \"Total\"],\n        ).set_index(\"age_category\"),\n    ]\n).to_html(\n    formatters={\n        (\"unweighted\", \"count\"): \"{:,.0f}\".format,\n        (\"unweighted\", \"percent\"): \"{:,.2%}\".format,\n        (\"unlinked_weight\", \"count\"): \"{:,.0f}\".format,\n        (\"unlinked_weight\", \"percent\"): \"{:,.2%}\".format,\n        (\"linked_weight\", \"count\"): \"{:,.0f}\".format,\n        (\"linked_weight\", \"percent\"): \"{:,.2%}\".format,\n    }\n)\n\nHTML(table)\n\n\n\n\n\n\nunweighted\nunlinked_weight\nlinked_weight\n\n\n\ncount\npercent\ncount\npercent\ncount\npercent\n\n\n\n\nWalked\n29,681\n87.56%\n301,777\n88.73%\n207,707\n87.76%\n\n\nBike\n663\n1.96%\n5,410\n1.59%\n4,318\n1.82%\n\n\nWas dropped off by someone\n1,595\n4.71%\n15,831\n4.65%\n11,720\n4.95%\n\n\nDrove alone and parked\n792\n2.34%\n5,397\n1.59%\n4,452\n1.88%\n\n\nDrove or rode with others and parked\n228\n0.67%\n1,610\n0.47%\n1,253\n0.53%\n\n\nWheelchair\n92\n0.27%\n971\n0.29%\n684\n0.29%\n\n\nSkateboard\n413\n1.22%\n4,199\n1.23%\n3,115\n1.32%\n\n\nCarshare (i.e. car2go, Zipcar, etc.)\n5\n0.01%\n45\n0.01%\n21\n0.01%\n\n\nTaxi, Uber, Lyft, etc.\n286\n0.84%\n3,821\n1.12%\n2,576\n1.09%\n\n\nFree Shuttle\n137\n0.40%\n1,014\n0.30%\n798\n0.34%\n\n\nOther\n5\n0.01%\n44\n0.01%\n42\n0.02%\n\n\nTotal valid\n33,892\n93.34%\n340,119\n91.98%\n236,688\n88.87%\n\n\nTotal\n36,310\nNaN\n369,768\nNaN\n266,337\nNaN\n\n\n\n\n\n\n\nTable\nunweighted = access_egress_mode.groupby(\"access_mode_abm\", observed=False).size()\nunlinked = access_egress_mode.groupby(\n    \"access_mode_abm\", observed=False\n).unlinked_weight.sum()\nlinked = access_egress_mode.groupby(\n    \"access_mode_abm\", observed=False\n).linked_weight.sum()\ntotal_valid = len(access_egress_mode.dropna())\ntotal = len(access_egress_mode)\n\nunlinked_total = access_egress_mode.unlinked_weight.sum()\nlinked_total = access_egress_mode.linked_weight.sum()\n\nsummary = pd.DataFrame(\n    {\n        (\"unweighted\", \"count\"): unweighted,\n        (\"unweighted\", \"percent\"): unweighted / unweighted.sum(),\n        (\"unlinked_weight\", \"count\"): unlinked,\n        (\"unlinked_weight\", \"percent\"): unlinked / unlinked.sum(),\n        (\"linked_weight\", \"count\"): linked,\n        (\"linked_weight\", \"percent\"): linked / linked.sum(),\n    }\n)\n\ntable = pd.concat(\n    [\n        summary,\n        pd.DataFrame(\n            [\n                {\n                    \"age_category\": \"Total valid\",\n                    (\"unweighted\", \"count\"): total_valid,\n                    (\"unweighted\", \"percent\"): total_valid / total,\n                    (\"unlinked_weight\", \"count\"): unlinked.sum(),\n                    (\"unlinked_weight\", \"percent\"): unlinked.sum() / unlinked_total,\n                    (\"linked_weight\", \"count\"): linked.sum(),\n                    (\"linked_weight\", \"percent\"): linked.sum() / linked_total,\n                },\n                {\n                    \"age_category\": \"Total\",\n                    (\"unweighted\", \"count\"): total,\n                    (\"unlinked_weight\", \"count\"): unlinked_total,\n                    (\"linked_weight\", \"count\"): linked_total,\n                },\n            ],\n            index=[\"Total valid\", \"Total\"],\n        ).set_index(\"age_category\"),\n    ]\n).to_html(\n    formatters={\n        (\"unweighted\", \"count\"): \"{:,.0f}\".format,\n        (\"unweighted\", \"percent\"): \"{:,.2%}\".format,\n        (\"unlinked_weight\", \"count\"): \"{:,.0f}\".format,\n        (\"unlinked_weight\", \"percent\"): \"{:,.2%}\".format,\n        (\"linked_weight\", \"count\"): \"{:,.0f}\".format,\n        (\"linked_weight\", \"percent\"): \"{:,.2%}\".format,\n    }\n)\n\nHTML(table)\n\n\n\n\n\n\nunweighted\nunlinked_weight\nlinked_weight\n\n\n\ncount\npercent\ncount\npercent\ncount\npercent\n\n\n\n\nWalk to transit\n30,186\n89.07%\n306,947\n90.26%\n211,507\n89.38%\n\n\nBike to transit\n663\n1.96%\n5,410\n1.59%\n4,318\n1.82%\n\n\nMicromobility to transit\n0\n0.00%\n0\n0.00%\n0\n0.00%\n\n\nPNR to transit\n1,020\n3.01%\n7,006\n2.06%\n5,705\n2.41%\n\n\nKNR to transit\n1,595\n4.71%\n15,831\n4.66%\n11,720\n4.95%\n\n\nTNC to transit\n428\n1.26%\n4,880\n1.43%\n3,395\n1.43%\n\n\nTotal valid\n33,892\n93.34%\n340,075\n91.97%\n236,645\n88.85%\n\n\nTotal\n36,310\nNaN\n369,768\nNaN\n266,337\nNaN\n\n\n\n\n\n\n\nChart\nfigure = go.Figure()\nfigure.add_trace(\n    go.Bar(\n        x=summary.index,\n        y=summary[(\"unweighted\", \"percent\")],\n        name=\"Unweighted\",\n    )\n)\nfigure.add_trace(\n    go.Bar(\n        x=summary.index,\n        y=summary[(\"unlinked_weight\", \"percent\")],\n        name=\"Weighted (Unlinked)\",\n    )\n)\nfigure.add_trace(\n    go.Bar(\n        x=summary.index,\n        y=summary[(\"linked_weight\", \"percent\")],\n        name=\"Weighted (Linked)\",\n    )\n)\nfigure.update_layout(\n    title_text=\"Unweighted and Weighted Responses by Access Mode (ABM Categories)\",\n    yaxis_range=[0, 1],\n    yaxis_tickformat=\",.0%\",\n    xaxis_title=\"Age\",\n    yaxis_title=\"Percent\",\n)\n\nfigure"
  },
  {
    "objectID": "notebooks/2015/mode/transit_mode.html",
    "href": "notebooks/2015/mode/transit_mode.html",
    "title": "Transit Mode",
    "section": "",
    "text": "Data\n# Categorize based on HHTS categories\n\ntransit_mode = pd.concat(\n    [\n        pd.read_parquet(SAVE_DIR / \"transit_mode.parquet\"),\n        pd.read_parquet(SAVE_DIR / \"weights.parquet\"),\n    ],\n    axis=1,\n)",
    "crumbs": [
      "2015 Onboard Survey",
      "Mode",
      "Transit Mode"
    ]
  },
  {
    "objectID": "notebooks/2015/mode/transit_mode.html#table",
    "href": "notebooks/2015/mode/transit_mode.html#table",
    "title": "Transit Mode",
    "section": "Table",
    "text": "Table\n\n\nTable\nunweighted = transit_mode.groupby(\"transit_mode\", observed=True).size()\nunlinked = transit_mode.groupby(\"transit_mode\", observed=True).unlinked_weight.sum()\nlinked = transit_mode.groupby(\"transit_mode\", observed=True).linked_weight.sum()\ntotal_valid = len(transit_mode.dropna())\ntotal = len(transit_mode)\n\nunlinked_total = transit_mode.unlinked_weight.sum()\nlinked_total = transit_mode.linked_weight.sum()\n\nsummary = pd.DataFrame(\n    {\n        (\"unweighted\", \"count\"): unweighted,\n        (\"unweighted\", \"percent\"): unweighted / unweighted.sum(),\n        (\"unlinked_weight\", \"count\"): unlinked,\n        (\"unlinked_weight\", \"percent\"): unlinked / unlinked.sum(),\n        (\"linked_weight\", \"count\"): linked,\n        (\"linked_weight\", \"percent\"): linked / linked.sum(),\n    }\n)\n\ntable = pd.concat(\n    [\n        summary,\n        pd.DataFrame(\n            [\n                {\n                    \"age_category\": \"Total valid\",\n                    (\"unweighted\", \"count\"): total_valid,\n                    (\"unweighted\", \"percent\"): total_valid / total,\n                    (\"unlinked_weight\", \"count\"): unlinked.sum(),\n                    (\"unlinked_weight\", \"percent\"): unlinked.sum() / unlinked_total,\n                    (\"linked_weight\", \"count\"): linked.sum(),\n                    (\"linked_weight\", \"percent\"): linked.sum() / linked_total,\n                },\n                {\n                    \"age_category\": \"Total\",\n                    (\"unweighted\", \"count\"): total,\n                    (\"unlinked_weight\", \"count\"): unlinked_total,\n                    (\"linked_weight\", \"count\"): linked_total,\n                },\n            ],\n            index=[\"Total valid\", \"Total\"],\n        ).set_index(\"age_category\"),\n    ]\n).to_html(\n    formatters={\n        (\"unweighted\", \"count\"): \"{:,.0f}\".format,\n        (\"unweighted\", \"percent\"): \"{:,.2%}\".format,\n        (\"unlinked_weight\", \"count\"): \"{:,.0f}\".format,\n        (\"unlinked_weight\", \"percent\"): \"{:,.2%}\".format,\n        (\"linked_weight\", \"count\"): \"{:,.0f}\".format,\n        (\"linked_weight\", \"percent\"): \"{:,.2%}\".format,\n    }\n)\n\nHTML(table)\n\n\n\n\n\n\nunweighted\nunlinked_weight\nlinked_weight\n\n\n\ncount\npercent\ncount\npercent\ncount\npercent\n\n\n\n\nLocal\n17,749\n48.88%\n192,906\n52.17%\n135,806\n50.99%\n\n\nRapid\n1,819\n5.01%\n21,242\n5.74%\n15,978\n6.00%\n\n\nExpress\n1,022\n2.81%\n13,190\n3.57%\n9,101\n3.42%\n\n\nLRT\n14,614\n40.25%\n137,301\n37.13%\n101,207\n38.00%\n\n\nCommuter Rail\n1,106\n3.05%\n5,129\n1.39%\n4,246\n1.59%\n\n\nTotal valid\n36,310\n100.00%\n369,768\n100.00%\n266,337\n100.00%\n\n\nTotal\n36,310\nNaN\n369,768\nNaN\n266,337\nNaN",
    "crumbs": [
      "2015 Onboard Survey",
      "Mode",
      "Transit Mode"
    ]
  },
  {
    "objectID": "notebooks/2015/mode/transit_mode.html#charts",
    "href": "notebooks/2015/mode/transit_mode.html#charts",
    "title": "Transit Mode",
    "section": "Charts",
    "text": "Charts\n\n\nChart\nfigure = go.Figure()\nfigure.add_trace(\n    go.Bar(\n        x=summary.index,\n        y=summary[(\"unweighted\", \"percent\")],\n        name=\"Unweighted\",\n    )\n)\nfigure.add_trace(\n    go.Bar(\n        x=summary.index,\n        y=summary[(\"unlinked_weight\", \"percent\")],\n        name=\"Weighted (Unlinked)\",\n    )\n)\nfigure.add_trace(\n    go.Bar(\n        x=summary.index,\n        y=summary[(\"linked_weight\", \"percent\")],\n        name=\"Weighted (Linked)\",\n    )\n)\nfigure.update_layout(\n    title_text=\"Unweighted and Weighted Responses by Transit Mode\",\n    yaxis_range=[0, 1],\n    yaxis_tickformat=\",.0%\",\n    xaxis_title=\"Age\",\n    yaxis_title=\"Percent\",\n)\n\nfigure",
    "crumbs": [
      "2015 Onboard Survey",
      "Mode",
      "Transit Mode"
    ]
  }
]